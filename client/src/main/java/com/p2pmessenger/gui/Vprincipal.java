package com.p2pmessenger.gui;

import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.UUID;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import com.p2pmessenger.client.Message;
import com.p2pmessenger.client.P2PClientImpl;
import com.p2pmessenger.client.P2PClientInterface;
import com.p2pmessenger.server.P2PServerInterface;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ecl
 */
public class Vprincipal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    private P2PServerInterface s;
    private P2PClientImpl c;
    private String id;
    private UUID uuidCliente;
    private HashMap<String,P2PClientInterface> amigos;

    public Vprincipal(P2PServerInterface servidor,P2PClientImpl cliente,String idp, UUID uuid) {
        initComponents();
        s=servidor;
        c=cliente;
        id=idp;
        uuidCliente=uuid;
        //Actualizo tabla
        this.c.updateOnlineFriendList();
        actualizarTabla(c.getOnlineFriends());
        jTextArea1.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        EscribirMensaje = new javax.swing.JTextArea();
        BotonEnviar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        Solicitudes = new javax.swing.JMenuItem();
        NuevoAmigo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabla.setModel(new tablausuarios());
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        EscribirMensaje.setColumns(20);
        EscribirMensaje.setRows(5);
        jScrollPane3.setViewportView(EscribirMensaje);

        BotonEnviar.setText("Enviar");
        BotonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEnviarActionPerformed(evt);
            }
        });

        menu.setText("Menu");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        Solicitudes.setText("Solicitudes");
        Solicitudes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolicitudesActionPerformed(evt);
            }
        });
        menu.add(Solicitudes);

        NuevoAmigo.setText("Añadir amigo");
        NuevoAmigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoAmigoActionPerformed(evt);
            }
        });
        menu.add(NuevoAmigo);

        jMenuBar1.add(menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(BotonEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        
  

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    //detctar que cambiou o amigo seleccionado
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {                                   
        // TODO add your handling code here:
        //Pedimos a implementación do cliente o chat correspondiente
        ArrayList<Message> chat= c.getChat(tabla.getValueAt(tabla.getSelectedRow(),0).toString());
        String conc="";
        //Actualizo o jText co formato correcto en cada mensaje
        String m="";

        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy/MM/dd HH:mm");

        for(int i=0;i<chat.size();i++){
            conc=conc+sdf1.format(chat.get(i).getTimestamp());
            conc=conc+" "+chat.get(i).getSender()+"   ";
            conc=conc+chat.get(i).getMessage()+"\n-----------------------------------\n";
            
        }
        jTextArea1.setText(conc);
    }                                  


    private void SolicitudesActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        System.out.println("Chega");
        Solicitudes vsol= new Solicitudes(this,s,c,id,uuidCliente);
        vsol.setVisible(true);
    }                                           

    private void NuevoAmigoActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        NewAmigo na=new NewAmigo(this,s,c,id,uuidCliente);
        na.setVisible(true);
    }                                          

    private void BotonEnviarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        //Envío mensaje
        String mensaje=EscribirMensaje.getText();
        EscribirMensaje.setText("");//vacío casilla donde escribo a mensaxe
        c.enviarMensaje(mensaje,tabla.getValueAt(tabla.getSelectedRow(),0).toString());
        //O introduzco no jtext
        String m="";
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");
        m=m+dtf.format(LocalDateTime.now());
        m=m+" "+c.getUsername()+"   ";
        m=m+mensaje;
        jTextArea1.setText(jTextArea1.getText()+m+"\n-----------------------------------\n");

        //DUDA---->Si hai erro ao enviar habría que mostralo na GUI?




    } 

    //Código para actualizar o chat
    public void MensajeRecibido(String emisor,String s){
        //si a columna seleccionada corresponde co mensaje recibido a actualizamos
        System.out.println(tabla.getValueAt(tabla.getSelectedRow(),0).toString());
        if(tabla.getValueAt(tabla.getSelectedRow(),0).toString().equals(emisor)){
            System.out.println("AQUICHEGA");
            String m="";
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm");
            m=m+dtf.format(LocalDateTime.now());
            m=m+" "+emisor+"   ";
            m=m+s;
            jTextArea1.setText(jTextArea1.getText()+m+"\n-----------------------------------\n");
        }
    }

   

    public void actualizarTabla(ArrayList<String> conectados) {
        DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
            }
        };
        modelo.addColumn("Amigos");
       
        for(Object s:conectados){
            modelo.addRow(new Object[]{s});
        }
        tabla.setModel((TableModel) modelo);
        if (modelo.getRowCount() > 0) {
            tabla.setRowSelectionInterval(0, 0);
        }
    }
    
      
    // Variables declaration - do not modify                     
    private javax.swing.JButton BotonEnviar;
    private javax.swing.JTextArea EscribirMensaje;
    private javax.swing.JMenuItem NuevoAmigo;
    private javax.swing.JMenuItem Solicitudes;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenu menu;
    private javax.swing.JTable tabla;
    // End of variables declaration          
}
